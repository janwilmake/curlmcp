{
  "info": {
    "title": "curl mcp API",
    "description": "API for curl mcp - the last MCP you'll need. Allows making HTTP requests to any URL through a simple REST API, mimicking the behavior of the curl command-line tool.",
    "version": "2.0.0"
  },
  "servers": [{ "url": "https://curlmcp.com" }],
  "security": [{ "BearerAuth": [] }],
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Bearer token for authentication"
      }
    }
  },

  "paths": {
    "/curl/{url}": {
      "get": {
        "operationId": "curlRequest",
        "summary": "Make a curl request to any URL",
        "description": "Sends an HTTP request to the specified URL with the given parameters, mimicking the behavior of the curl command-line tool.",
        "parameters": [
          {
            "name": "url",
            "in": "path",
            "description": "The URL to send the request to (defaults to https protocol)",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "request",
            "in": "query",
            "description": "Specifies the HTTP method. Valid values: GET, POST, PUT, DELETE, PATCH, HEAD, OPTIONS.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "GET",
                "POST",
                "PUT",
                "DELETE",
                "PATCH",
                "HEAD",
                "OPTIONS"
              ],
              "default": "GET"
            }
          },
          {
            "name": "header",
            "in": "query",
            "description": "Adds custom HTTP headers. Repeat for multiple headers.",
            "required": false,
            "schema": {
              "type": "array",
              "items": { "type": "string" }
            },
            "style": "form",
            "explode": true,
            "example": "Content-Type:application/json"
          },
          {
            "name": "data",
            "in": "query",
            "description": "Sends data in the request body (POST) or query string (with get=true). Repeat for multiple data pairs.",
            "required": false,
            "schema": {
              "type": "array",
              "items": { "type": "string" }
            },
            "style": "form",
            "explode": true,
            "example": "key=value"
          },
          {
            "name": "data-urlencode",
            "in": "query",
            "description": "Sends URL-encoded data in the request.",
            "required": false,
            "schema": {
              "type": "array",
              "items": { "type": "string" }
            },
            "style": "form",
            "explode": true,
            "example": "comment=this%20is%20awesome"
          },
          {
            "name": "get",
            "in": "query",
            "description": "Forces data to be sent as a GET request query string.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Includes response headers in the output.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "name": "head",
            "in": "query",
            "description": "Sends a HEAD request.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "name": "user",
            "in": "query",
            "description": "Specifies credentials for authentication (format: username:password).",
            "required": false,
            "schema": { "type": "string" },
            "example": "user:pass"
          },
          {
            "name": "location",
            "in": "query",
            "description": "Follows HTTP redirects.",
            "required": false,
            "schema": { "type": "boolean", "default": true }
          },
          {
            "name": "verbose",
            "in": "query",
            "description": "Enables verbose output for debugging.",
            "required": false,
            "schema": { "type": "boolean", "default": false }
          },
          {
            "name": "access_token",
            "in": "query",
            "description": "Injects an OAuth token for X or GitHub authentication.",
            "required": false,
            "schema": { "type": "string" }
          },
          {
            "name": "instructions",
            "in": "query",
            "description": "Specifies contextual instructions for the request.",
            "required": false,
            "schema": { "type": "string" },
            "example": "transform_response_to_markdown"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "text/plain": { "schema": { "type": "string" } },
              "text/markdown": { "schema": { "type": "string" } },
              "application/json": { "schema": { "type": "object" } }
            }
          },
          "400": {
            "description": "Bad request",
            "content": { "text/plain": { "schema": { "type": "string" } } }
          },
          "401": {
            "description": "Unauthorized",
            "content": { "text/plain": { "schema": { "type": "string" } } }
          },
          "500": {
            "description": "Internal server error",
            "content": { "text/plain": { "schema": { "type": "string" } } }
          }
        }
      }
    }
  }
}
